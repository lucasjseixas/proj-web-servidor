// dia 06/11/24 --> Mostrar o Projeto 1
// dia 07/11/24 --> Avalia√ß√£o te√≥rica -- Sala no L (a ser reservada)

<--- TODO LIST ---> * Atualizada *

! Implementar edi√ß√£o de perfil ‚ö†Ô∏èüöß
! Implementar autoriza√ß√£o de visualiza√ß√£o de arquivos baseada em perfis ‚ö†Ô∏èüöß

** Autorizar cria√ß√£o de um diretorio com o nome do usuario **

CREATE TABLE arquivos (
    id INT AUTO_INCREMENT
    user_id INT,
    nome_arquivo VARCHAR(255),
    caminho_arquivo VARCHAR(255),
    data_upload TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES usuarios(id)
)

mkdir($userDIR, 0777, true) --> cria o diretorio e deixa o maior niel de permissao, seja para escrever, executar ou editar

uniqid();
chmod($filepath, 0644);
chown(); // Muda a ownership do aquivo. Ex: chown("text.txt", "alguem");

x Implementa√ß√£o pessoal: Corrigir a parte de autentica√ß√£o com o DB -- FEITO ‚úÖ
x Adicionar o TinyMCE no AreaText -- FEITO ‚úÖ
x Corrigir o padr√£o de cores do sistema -- Nao irei mexer por agora ‚ö†Ô∏è‚ùå --> N√ÉO SER√Å FEITO
x Adicionar JS nos envios, erros e sucessos -- Em fase de implementa√ß√£o e testes ‚úÖ

/* TODO do dia 31/10/2024 */

// Fazer vincula√ß√£o dos arquivos ao usu√°rio, pu seja, bloquear qualquer usu√°rio que n√£o seja o 'dono' dos arquivos
// Possibilitar outros tipos de edi√ß√µes ao usu√°rio, como 'nome', 'senha' e 'foto de perfil'

/* TODO do dia 24/10/2024 */

// Adi√ß√£o de um DB (J√° implementado)
// Ver se precisa ser um PDO
// Refazer as rotas de cadastro e autenticacao, o index est√° com problemas e pede para conectar ao banco de dados logo de cara, o que nao faz sentido, preciso achar uam maneira de como evitar que o php pe√ßa a entrada
// mysqli_affected_rows INSERT UPDATE DELETE √© usada para saber quantas linhas foram afetadas
// mysqli_num_rows √© para SELECT
// if para essas statements, para ver se alguma coisa deu errado
// Procedimentos de seguran√ßa: fazer hash no password ou md5(?), preferencia para o SHA.256 SHA.512
// Come√ßar a utilizar htmlspecialchars para tratamento de email e senha
// filter_var para fazer sanitiza√ß√£o completo (ela retira a tag html do input e fica somente a parte importante do texto)
// filter_input tambem realiza sanitiza√ß√£o (escolher entre as 2 fun√ß√µes)

/* TODO do dia 23/10/2024 */

// Implementa√ß√£o do Upload sem muitas restri√ß√µes em 24/10/2024
// Futuramente adicionar if statements para bloquear outros tipos de arquivos, ou seja, deixar somente arquivos do tipo .txt

// Detalhe de implementa√ß√£o de upload
// $_FILES √© um array
// enctype="multipart/form-data" -> necess√°rio
// <Form></Form> -> Somente em metodo POST
// Envio de diversos arquivos: inputfile no html -> no atributo name="arquivo[]" // Tamb√©m necessita atribui√ß√£o de diversos arquivos
// Tamb√©m tem as posi√ß√µes no array
// Tamb√©m necessita utilizar foreach, while, for, qualquer um tipo desses para passar pelos arquivos
// Fun√ß√£o move_uploaded_file, pega o arquivo da superglobal $_FILES (tmp_name, e deixa salvo em algum lugar com um nome tmp tamb√©m)
// move_uploaded_file retorna true or false
// Deixar dentro de um 'if statement', ou seja, fazer tratamento dos dados

/* TODO baseado na aula de 17/10/24 */

//  Isso para apagar os arquivos
//  Para apagar o arquivo, usar UNLINK (delete)
//  File_exists checa se o arquivo existe
//  Botao de excluir precisa der <a></a> e no href="localhost?File='nome_do_arquivo'"
//  $_GET['File']
//  Clicar em link = $_GET
// FEITO - 18/10/24


// Editar √© usar o <a href='localhost?'></a>
// TinyMCE
// localhost/editar.php?file=_____&op=_____
// <? if( ) :? rightarrow

// <? endif; ? rightarrow
// <?php echo 'lalala ====> <?=  √© equivalente a echo
// file_get_contents
// <textarea><?=$conteudo?

